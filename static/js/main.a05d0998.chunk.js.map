{"version":3,"sources":["utils/config.ts","utils/mixpanel-frontend.ts","components/TenantSelector/types.ts","components/InfoMessage/InfoMessage.tsx","hooks/index.tsx","store/sdk.ts","store/auth.tsx","hooks/env.ts","hooks/history.tsx","hooks/useQuery.tsx","components/TenantSelector/Collapse/Collapse.tsx","components/TenantSelector/LoginWithAzure.tsx","components/TenantSelector/utils.tsx","components/TenantSelector/api.ts","components/TenantSelector/LegacyLoginInput.tsx","components/TenantSelector/ClusterSelect.tsx","components/TenantSelector/ProjectSelect.tsx","components/TenantSelector/TenantList.tsx","components/TenantSelector/TenantSelector.tsx","pages/LoginPage/OIDCLogin.tsx","pages/LoginPage/LoginPage.tsx","pages/HomePage/HomePage.tsx","hooks/useUrls.ts","store/model.tsx","store/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MIXPANEL_TOKEN","process","REACT_APP_MIXPANEL_TOKEN","mixpanel","init","AuthProviders","types","InfoMessage","type","title","size","children","StyledContainer","includes","toLocaleLowerCase","StyledIcon","StyledGraphic","style","width","StyledTitle","level","StyledContent","styled","div","Title","props","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","sdkModel","sdk","CogniteClient","appId","resetSdk","action","state","newClient","useResetSdk","store","LoginType","ITG_ENV_PREF","useEnv","location","useLocation","params","queryString","parse","search","lsEnv","window","localStorage","getItem","JSON","env","Array","getClientId","clientId","API_KEY_LOCALSTORAGE_KEY","TENANT_LOCALSTORAGE_KEY","authModel","apiKey","undefined","tenant","cluster","email","token","loggedIn","setLoggedIn","loginType","length","setItem","toLowerCase","toString","updateToken","getCluster","_","isString","generateLoginOptions","client","options","prompt","audience","directory","provider","Azure","id","tenantId","signInType","requestParams","openIdConfigurationUrl","configurationUrl","responseMode","responseType","extraScope","authenticateParams","refreshParams","loginParams","useLogin","auth","Auth0","postOAuthLogin","usePostOAuthLogin","a","useOIDC","getFlow","flow","config","loginWithOAuth","authenticate","setProject","getCDFToken","handleLoginForApiKey","verifyLoginForTenant","handleLoginForTenant","login","status","response","user","project","people","set_once","$email","cdfTenant","identify","register","track","apikey","cdfToken","JWT","unique_name","oauth","cdfClient","fetch","headers","loginData","json","asJson","data","Error","loginWithApiKey","onToken","onAuthenticate","onTokens","onTenantToken","accessToken","idToken","setTimeout","exp","Date","getTime","useStatefulHistory","history","useHistory","pushStateful","pathname","push","replaceStateful","replace","useQuery","method","URLSearchParams","get","TitleWrapper","TitleIcon","Icon","$visible","TitleText","Content","Collapse","open","useState","isOpen","setIsOpen","useEffect","onClick","AdvancedOptionsContainer","generateButtonText","isAuthenticated","LoginWithAzure","isInitializing","logout","setDirectory","providerTitle","height","marginTop","marginRight","color","fullWidth","value","placeholder","onKeyUp","e","key","saveFlow","trim","go","onChange","target","postfix","checkUrl","hostname","isProduction","extractTenants","jwtDecode","createAuth0TenantUrl","getBaseURL","clusterName","api","axios","create","validateTenant","app","redirectUrl","origin","ErrorFeedback","projectMissing","invalidProject","InputHelp","ContinueButtonContainer","LegacyLoginFlow","onTenantSelected","projectName","setProjectName","validationStatus","setValidationStatus","showFeedback","setShowFeedback","checkTenantValidity","preventDefault","isTenantValid","input","sanitize","onKeyDown","error","loading","ClusterSelect","onClusterChange","clusters","reduce","accl","group","find","label","marginBottom","formatCreateLabel","ProjectTitle","ProjectSelect","sdkv3","move","selectedProject","setSelectedProject","getBaseUrl","result","projects","map","p","projectUrlName","isFetched","d","selected","margin","disabled","TenantTitle","TenantList","onTenantChanged","selectedTenant","setSelectedTenant","tenants","setTenants","handleOnChange","getIdToken","then","tokensList","removeItem","name","TenantSelector","updateCluster","clustersOptions","acc","c","selectedClusterInfo","x","getClusterInfo","setClientId","setProvider","setCluster","gotToken","setGotToken","setIsInitializing","hasError","setHasError","clustersWithLegacyAuth","filter","legacyAuth","clustersWithAAD","disableAad","clientInfo","GetTenantToken","newSdk","saveAzureFlow","setDefaultTenant","AUTH0_TWO_STEP_KEY","needTwoStepLogin","t","catch","finally","Card","ContentWrapper","sessionStorage","forIn","objKey","startsWith","LegacyContainer","saveTenantFlow","HelpLink","href","rel","HelpLinkIcon","OIDCLogin","setEnvironment","stringify","useUpdateEnv","selectedClusterValue","LoginPage","storeApiKey","storeTenant","setApiKey","setTenant","isLoading","setLoading","queryParams","useMemo","onLogIn","isApiKeyActive","isOAuthActive","isLoginAllowed","notification","message","description","overflow","scrollBehavior","LoginPageContainer","LoginWrapper","className","LoginContent","Description","marginLeft","onFinish","FormItem","Password","data-id","event","StyledButton","block","htmlType","Form","Item","h1","Button","HomePage","url","encodeURI","host","src","useUrl","useParams","storeModel","createStore","GlobalStyle","createGlobalStyle","StyledPage","StyledWrapper","theme","colors","primary","primary_background","queryClient","QueryClient","MyApp","QueryClientProvider","exact","path","RedirectToUrlTenant","isSignedIn","urlTenant","darkMode","icon","iconPlacement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","metric"],"mappings":"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","file":"static/js/main.a05d0998.chunk.js","sourcesContent":["export const MIXPANEL_TOKEN =\n  process.env.REACT_APP_MIXPANEL_TOKEN || 'fb25742efb56d116b736515a0ad5f6ef';\nexport const IS_DEVELOPMENT = process.env.NODE_ENV === 'development';\n","import { MIXPANEL_TOKEN } from 'utils/config';\nimport mixpanel from 'mixpanel-browser';\n\n/*\ntodo: Disable this for local development?\nI'm not doing this yet, because i'd like to track some performance\nmetrics when it comes to dev experience as well\n*/\nmixpanel.init(MIXPANEL_TOKEN);\n\nexport default mixpanel;\n","export type Clusters = {\n  label: string;\n  options: Cluster[];\n}[];\n\nexport enum AuthProviders {\n  Azure,\n  Auth0,\n}\n\nexport type Cluster = {\n  cluster: string;\n  value: string;\n  label: string;\n  legacyAuth?: boolean;\n  disableAad?: boolean;\n  type?: AuthProviders;\n  configurationUrl?: string;\n  clientId?: string;\n};\n\nexport type ClientInfo = {\n  provider: AuthProviders;\n  id: string;\n  cluster?: string;\n  configurationUrl?: string;\n};\n","import React, { ReactChild } from 'react';\nimport styled from 'styled-components/macro';\nimport { Title, Graphic } from '@cognite/cogs.js';\n\nconst types: string[] = ['error'];\n\nexport const InfoMessage = ({\n  type,\n  title,\n  size = 150,\n  children,\n}: {\n  type: string;\n  title?: string;\n  size?: number;\n  children?: ReactChild;\n}) => (\n  <StyledContainer>\n    {!types.includes(type.toLocaleLowerCase()) ? (\n      <StyledGraphic>\n        <Graphic type={type} style={{ width: size }} />\n      </StyledGraphic>\n    ) : (\n      <StyledIcon type={type} size={size} />\n    )}\n    {title && <StyledTitle level={5}>{title}</StyledTitle>}\n    <StyledContent>{children}</StyledContent>\n  </StyledContainer>\n);\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledGraphic = styled.div`\n  margin: 1rem 0;\n`;\n\nconst StyledTitle = styled(Title)`\n  margin: 0.5rem 0;\n`;\n\nconst StyledContent = styled.div`\n  text-align: center;\n`;\n\ninterface IStyledIconType {\n  type: string;\n  size: number;\n}\n\nconst StyledIcon = styled.div<IStyledIconType>`\n  display: inline-block;\n  width: ${(props: IStyledIconType) => `${props.size}px`};\n  height: ${(props: IStyledIconType) => `${props.size}px`};\n  background: ${(props: IStyledIconType) =>\n    `transparent url('/images/graphics/${props.type.toLocaleLowerCase()}.svg') center center no-repeat`};\n  background-size: cover;\n`;\n","import { createTypedHooks } from 'easy-peasy'; // 👈import the helper\nimport { StoreModel } from 'store/model';\n\n// Provide our model to the helper      👇\nconst typedHooks = createTypedHooks<StoreModel>();\n\n// 👇 export the typed hooks\nexport const { useStoreActions } = typedHooks;\nexport const { useStoreDispatch } = typedHooks;\nexport const { useStoreState } = typedHooks;\n","import { CogniteClient } from '@cognite/sdk';\nimport { action, Action } from 'easy-peasy';\nimport { useStoreActions, useStoreState } from 'hooks';\n\nexport interface SdkModel {\n  sdk: CogniteClient;\n  resetSdk: Action<SdkModel, CogniteClient>;\n}\n\nexport const sdkModel: SdkModel = {\n  sdk: new CogniteClient({ appId: 'il-tempo-gigante' }),\n  resetSdk: action((state, newClient) => {\n    state.sdk = newClient;\n  }),\n};\n\nexport const useSdk = () => useStoreState((store) => store.sdk.sdk);\nexport const useResetSdk = () => useStoreActions((store) => store.sdk.resetSdk);\n","import { action, Action } from 'easy-peasy';\nimport mixpanel from 'utils/mixpanel-frontend';\nimport { useStoreActions } from 'hooks';\nimport { useResetSdk } from 'store/sdk';\nimport JWT from 'jwt-decode';\nimport { CogniteClient } from '@cognite/sdk';\nimport { getFlow } from '@cognite/auth-utils';\nimport {\n  AuthProviders,\n  ClientInfo,\n  Cluster,\n} from 'components/TenantSelector/types';\nimport _ from 'lodash';\nimport { useEnv } from '../hooks/env';\n\nexport enum LoginType {\n  apikey,\n  oauth,\n  tenant,\n}\n\n/**\n * This is from https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Overview/appId/86057cba-4df2-4613-a27d-e747e17a5305/isMSAApp/. The configs are in Terraform.\n */\nconst AZURE_APP_ID = '86057cba-4df2-4613-a27d-e747e17a5305';\n\nexport const getClientId = (clientId: string | undefined) =>\n  clientId || AZURE_APP_ID;\n\nexport interface AuthModel {\n  apiKey: string | undefined;\n  tenant: string | undefined;\n  token: string | undefined;\n  cluster: string | undefined;\n  email: string | undefined;\n  loggedIn: boolean | undefined;\n  // methods\n  setLoggedIn: Action<\n    AuthModel,\n    | {\n        apiKey?: string;\n        tenant?: string;\n        email?: string;\n        cluster?: string;\n        loginType: LoginType;\n      }\n    | false\n  >;\n  updateToken: Action<AuthModel, string | undefined>;\n}\n\nexport const API_KEY_LOCALSTORAGE_KEY = '__itg__api_key';\nexport const TENANT_LOCALSTORAGE_KEY = '__itg__tenant';\nexport const CLUSTER_LOCALSTORAGE_KEY = '__itg__cluster';\n\nexport const authModel: AuthModel = {\n  apiKey: localStorage.getItem(API_KEY_LOCALSTORAGE_KEY) || undefined,\n  tenant: localStorage.getItem(TENANT_LOCALSTORAGE_KEY) || undefined,\n  cluster: undefined,\n  email: undefined,\n  token: undefined,\n  loggedIn: undefined,\n  // methods\n  setLoggedIn: action((state, params) => {\n    if (!params) {\n      state.apiKey = undefined;\n      state.token = undefined;\n      state.tenant = undefined;\n      state.cluster = undefined;\n      state.email = undefined;\n      state.loggedIn = undefined;\n    } else {\n      const { apiKey, tenant, cluster, loginType, email } = params;\n      if (tenant && tenant.length !== 0) {\n        localStorage.setItem(TENANT_LOCALSTORAGE_KEY, tenant);\n        state.tenant = tenant;\n      }\n      if (apiKey && apiKey.length !== 0) {\n        localStorage.setItem(API_KEY_LOCALSTORAGE_KEY, apiKey);\n        state.apiKey = apiKey;\n        state.token = apiKey;\n      }\n      if (cluster && cluster.length !== 0) {\n        localStorage.setItem(CLUSTER_LOCALSTORAGE_KEY, cluster);\n        state.cluster = cluster;\n      }\n      if (email && email.length !== 0) {\n        state.email = email.toLowerCase();\n      }\n      if (loginType.toString()) {\n        state.loggedIn = true;\n      }\n    }\n  }),\n  updateToken: action((state, token) => {\n    state.token = token;\n    if (!state.tenant)\n      // solving temp gql 500 error for requests with token but without project in header\n      state.tenant = localStorage.getItem(TENANT_LOCALSTORAGE_KEY) || undefined;\n  }),\n};\n\nconst getCluster = (env: string | Cluster) =>\n  _.isString(env) ? env : (env as Cluster).cluster;\n\nexport const generateLoginOptions = (\n  client: ClientInfo,\n  options: any,\n  prompt: string\n): any => {\n  const audience = { audience: options?.directory || '' };\n  return client.provider === AuthProviders.Azure\n    ? {\n        type: 'AAD_OAUTH',\n        options: {\n          clientId: client.id,\n          cluster: client.cluster || 'api',\n          tenantId: options?.directory,\n          signInType: {\n            type: 'loginRedirect',\n            requestParams: {\n              prompt,\n            },\n          },\n        },\n      }\n    : {\n        type: 'OIDC_AUTHORIZATION_CODE_FLOW',\n        options: {\n          clientId: client.id,\n          cluster: client.cluster || 'api',\n          openIdConfigurationUrl: client.configurationUrl,\n          responseMode: 'query',\n          responseType: 'code',\n          extraScope: 'openid profile offline_access',\n          authenticateParams: audience,\n          refreshParams: audience,\n          loginParams: {\n            prompt,\n          },\n        },\n      };\n};\n\nexport const useLogin = () => {\n  const setLoggedIn = useStoreActions((state) => state.auth.setLoggedIn);\n  const env = useEnv();\n  const updateToken = useStoreActions((state) => state.auth.updateToken);\n  const cluster = getCluster(env);\n  const provider =\n    _.isString(env) || (env as Cluster).type !== AuthProviders.Auth0\n      ? AuthProviders.Azure\n      : AuthProviders.Auth0;\n  const resetSdk = useResetSdk();\n  const sdk = new CogniteClient({ appId: 'il-tempo-gigante' });\n  const clientId = getClientId(\n    _.isString(env) ? undefined : (env as Cluster).clientId\n  );\n  const postOAuthLogin = usePostOAuthLogin();\n  return async ({\n    apiKey,\n    tenant,\n    token,\n    useOIDC,\n  }: {\n    apiKey?: string;\n    token?: string;\n    tenant?: string;\n    useOIDC?: boolean;\n  }) => {\n    resetSdk(sdk);\n    const { flow, options } = getFlow(tenant, cluster);\n    if (useOIDC) {\n      if (flow && options && env && tenant) {\n        const config: any = generateLoginOptions(\n          {\n            id: clientId,\n            cluster,\n            provider,\n            configurationUrl: (env as Cluster).configurationUrl,\n          },\n          options,\n          'none'\n        );\n\n        await sdk.loginWithOAuth(config);\n        await sdk.authenticate();\n        await sdk.setProject(tenant);\n        const cdfToken = await sdk.getCDFToken();\n        if (cdfToken) {\n          postOAuthLogin(sdk, tenant);\n          return { loggedIn: true };\n        }\n      }\n      return { loggedIn: false };\n    }\n    if (apiKey) {\n      await handleLoginForApiKey(sdk, apiKey);\n    } else if (tenant) {\n      if (token) {\n        await verifyLoginForTenant(sdk, tenant, token, updateToken);\n      } else {\n        await handleLoginForTenant(sdk, tenant, updateToken);\n      }\n    }\n\n    const response = await sdk.login.status();\n    if (response) {\n      const { user, project } = response;\n      mixpanel.people.set_once({ $email: user, cdfTenant: project });\n      mixpanel.identify(user);\n      mixpanel.register({\n        cdfTenant: project,\n      });\n      if (token) {\n        updateToken(token);\n      }\n      mixpanel.track('Logged in');\n      setLoggedIn({\n        tenant: project,\n        email: user,\n        apiKey,\n        loginType: apiKey ? LoginType.apikey : LoginType.tenant,\n      });\n      return { loggedIn: true, tenant: project, user };\n    }\n    setLoggedIn(false);\n    return { loggedIn: false };\n  };\n};\nexport const usePostOAuthLogin = () => {\n  const setLoggedIn = useStoreActions((state) => state.auth.setLoggedIn);\n  const updateToken = useStoreActions((state) => state.auth.updateToken);\n  const env = useEnv();\n  const cluster = getCluster(env);\n  return async (sdk: CogniteClient, tenant?: string) => {\n    let cdfToken: string | null = null;\n    try {\n      cdfToken = await sdk.getCDFToken();\n    } catch {\n      // noop, because cdfToken is completely internal to the SDK and there's no way to check if that is available without it throwing an error\n      // in the case an error is thrown, we should safely assume the user is not logged in, and ignore the error\n    }\n    if (cdfToken) {\n      updateToken(cdfToken);\n      // unique name is usually supplied via AAD token to indicate the user's unique identifier if email is missing\n      // eslint-disable-next-line camelcase\n      const response = JWT<Record<string, string>>(cdfToken);\n      const email =\n        response.email ||\n        response.unique_name ||\n        response['https://twindata.io/email'];\n\n      setLoggedIn({\n        tenant,\n        email,\n        loginType: LoginType.oauth,\n        cluster: cluster || 'api',\n      });\n      mixpanel.people.set_once({\n        $email: email,\n        cdfTenant: tenant,\n      });\n      mixpanel.identify(email);\n      mixpanel.register({\n        cdfTenant: tenant,\n      });\n    }\n  };\n};\n\nconst handleLoginForApiKey = async (\n  cdfClient: CogniteClient,\n  apiKey: string\n) => {\n  const loginData = await fetch('https://api.cognitedata.com/login/status', {\n    headers: {\n      'api-key': apiKey,\n    },\n  });\n  const asJson = await loginData.json();\n  const { project, loggedIn } = asJson.data;\n  if (loggedIn !== true) {\n    throw new Error('Could not log in');\n  }\n  cdfClient.loginWithApiKey({\n    project,\n    apiKey,\n  });\n};\n\nconst handleLoginForTenant = async (\n  cdfClient: CogniteClient,\n  tenant: string,\n  onToken: (newToken: string | undefined) => void\n) => {\n  localStorage.setItem(TENANT_LOCALSTORAGE_KEY, tenant);\n  await cdfClient.loginWithOAuth({\n    type: 'CDF_OAUTH',\n    options: {\n      project: tenant,\n      onAuthenticate: 'REDIRECT',\n      onTokens: onTenantToken(cdfClient, onToken),\n    },\n  });\n  await cdfClient.authenticate();\n};\n\nconst verifyLoginForTenant = async (\n  cdfClient: CogniteClient,\n  tenant: string,\n  token: string,\n  onToken: (newToken: string | undefined) => void\n) => {\n  localStorage.setItem(TENANT_LOCALSTORAGE_KEY, tenant);\n  await cdfClient.loginWithOAuth({\n    type: 'CDF_OAUTH',\n    options: {\n      project: tenant,\n      accessToken: token,\n      onAuthenticate: 'REDIRECT',\n      onTokens: onTenantToken(cdfClient, onToken),\n    },\n  });\n};\n\nconst onTenantToken =\n  (cdfClient: CogniteClient, onToken: (newToken: string | undefined) => void) =>\n  async ({\n    accessToken,\n    idToken,\n  }: {\n    accessToken: string;\n    idToken: string;\n  }) => {\n    const loginStatus = await cdfClient.login.status();\n    if (loginStatus) {\n      onToken(accessToken);\n\n      const response = JWT<{ exp: number }>(idToken);\n\n      setTimeout(() => {\n        cdfClient.authenticate();\n      }, response.exp * 1000 - new Date().getTime());\n    } else {\n      mixpanel.track('Unable to refetch token');\n    }\n  };\n","import { Cluster } from 'components/TenantSelector/types';\nimport queryString from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport _ from 'lodash';\n\nconst ITG_ENV_PREF = 'itg_env_pref';\n\nexport function useEnv(): Cluster | string {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  let lsEnv = window.localStorage.getItem(ITG_ENV_PREF) || '';\n  try {\n    lsEnv = JSON.parse(lsEnv);\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  const { env } = params;\n  if (env instanceof Array) {\n    return env[0] || '';\n  }\n\n  return lsEnv || env || '0';\n}\n\nexport function useUpdateEnv() {\n  const history = useHistory();\n  const params = queryString.parse(history.location.search);\n  return (env: Cluster | string | undefined) => {\n    if (!env) {\n      delete params.env;\n    } else {\n      params.env = _.isString(env) ? env : (env as Cluster).value;\n    }\n    if (env) {\n      window.localStorage.setItem(ITG_ENV_PREF, JSON.stringify(env));\n    } else {\n      window.localStorage.removeItem(ITG_ENV_PREF);\n    }\n    history.push({\n      search: queryString.stringify(params),\n    });\n  };\n}\n","import { useHistory } from 'react-router-dom';\n\nexport const useStatefulHistory = () => {\n  const history = useHistory();\n\n  return {\n    ...history,\n    pushStateful: (pathname: string) =>\n      history.push({\n        search: history.location.search,\n        pathname,\n      }),\n    replaceStateful: (pathname: string) =>\n      history.replace({\n        search: history.location.search,\n        pathname,\n      }),\n  };\n};\n","import { useLocation } from 'react-router-dom';\n\nexport const useQuery = {\n  Tab: () => {\n    const urlSearchParams = new URLSearchParams(useLocation().search);\n    return urlSearchParams.get('tab') as string;\n  },\n  Schema: () => {\n    const urlSearchParams = new URLSearchParams(useLocation().search);\n    return urlSearchParams.get('schema') as string;\n  },\n  SchemaId: () => {\n    const urlSearchParams = new URLSearchParams(useLocation().search);\n    return urlSearchParams.get('schemaId') as string;\n  },\n  Method: () => {\n    const urlSearchParams = new URLSearchParams(useLocation().search);\n    const method = urlSearchParams.get('method');\n    if (method === 'apikey' || method === 'tenant' || method === 'oauth') {\n      return method;\n    }\n    return undefined;\n  },\n};\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Icon } from '@cognite/cogs.js';\nimport styled from 'styled-components/macro';\n\ninterface Props {\n  title: string;\n  children: ReactNode;\n  open?: boolean;\n}\n\nconst Collapse = ({ title, children, open }: Props) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (open !== undefined) {\n      setIsOpen(open);\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <TitleWrapper onClick={() => setIsOpen(!isOpen)}>\n        <TitleIcon $visible={isOpen} type=\"ChevronRightCompact\" />\n        <TitleText>{title}</TitleText>\n      </TitleWrapper>\n      <Content $visible={isOpen}>{children}</Content>\n    </div>\n  );\n};\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\ninterface VisibleProp {\n  $visible: boolean;\n}\n\nconst TitleIcon = styled(Icon)<VisibleProp>`\n  transform: rotate(${(props) => (props.$visible ? '90deg' : '0deg')});\n`;\n\nconst TitleText = styled.div`\n  margin-left: 10px;\n  font-weight: bold;\n  font-size: 13px;\n  line-height: 20px;\n  color: var(--cogs-greyscale-grey9);\n`;\n\nconst Content = styled.div<VisibleProp>`\n  margin-top: ${(props) => (props.$visible ? '20px' : '0')};\n  height: ${(props) => (props.$visible ? 'auto' : '0')};\n  overflow: hidden;\n`;\n\nexport default Collapse;\n","import React, { useState } from 'react';\nimport { Button, Input, Icon } from '@cognite/cogs.js';\nimport { saveFlow, getFlow } from '@cognite/auth-utils';\n\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components/macro';\nimport Collapse from './Collapse';\nimport { AuthProviders } from './types';\n\nconst AdvancedOptionsContainer = styled.div`\n  margin: 10px 0;\n`;\n\ntype Props = {\n  isAuthenticated: boolean;\n  isInitializing: boolean;\n  provider: AuthProviders;\n  login: (directory?: string) => void;\n  logout: () => void;\n};\n\n/**\n * Taken from https://github.com/cognitedata/cdf-hub-tenant-selector\n */\n\nconst generateButtonText = (\n  isAuthenticated: boolean,\n  provider: AuthProviders\n) => {\n  const title = isAuthenticated ? 'Sign out' : 'Sign in';\n  if (provider === AuthProviders.Auth0) return title;\n  return `${title} ${isAuthenticated ? 'from Microsoft' : 'with Microsoft'}`;\n};\n\nexport default function LoginWithAzure({\n  isAuthenticated,\n  isInitializing,\n  provider,\n  login,\n  logout,\n}: Props) {\n  const history = useHistory();\n  const { flow, options } = getFlow();\n\n  const [directory, setDirectory] = useState<string | undefined>(\n    flow === 'AZURE_AD' ? options?.directory : undefined\n  );\n\n  const providerTitle = provider === AuthProviders.Azure ? 'Azure' : '';\n\n  return (\n    <>\n      <Button\n        style={{ height: 40, width: '100%', marginTop: 10 }}\n        type=\"secondary\"\n        onClick={() => {\n          if (isAuthenticated) {\n            logout();\n          } else {\n            login(directory);\n          }\n        }}\n      >\n        {isInitializing ? (\n          <Icon\n            type=\"Loading\"\n            style={{ marginRight: 10, color: 'var(--cogs-greyscale-grey7)' }}\n          />\n        ) : null}\n        {generateButtonText(isAuthenticated, provider)}\n      </Button>\n      <AdvancedOptionsContainer>\n        <Collapse\n          open={!!options?.directory}\n          title={`Advanced ${providerTitle} options`}\n        >\n          <Input\n            title={`Override ${providerTitle} tenant`}\n            type=\"text\"\n            fullWidth\n            value={`${directory || ''}`}\n            placeholder=\"contoso.onmicrosoft.com\"\n            onKeyUp={(e) => {\n              if (e.key === 'Enter') {\n                saveFlow('AZURE_AD', { directory: directory?.trim() });\n                history.go(0);\n              }\n            }}\n            onChange={(e) => setDirectory(e.target.value)}\n            postfix={\n              <Button\n                onClick={() => {\n                  saveFlow('AZURE_AD', { directory: directory?.trim() });\n                  history.go(0);\n                }}\n              >\n                Set tenant\n              </Button>\n            }\n          />\n          <p>\n            If your user is a guest user of the organization you are logging in\n            to, specify it here.\n          </p>\n        </Collapse>\n      </AdvancedOptionsContainer>\n    </>\n  );\n}\n","import jwtDecode from 'jwt-decode';\n\nexport const checkUrl = (env: string) => window.location.hostname.includes(env);\nexport const isDevelopment = () => checkUrl('dev') || checkUrl('localhost');\nexport const isStaging = () => checkUrl('staging') || checkUrl('pr');\nexport const isProduction = () => !(isStaging() || isDevelopment());\n\nexport const extractTenants = (token: string) => {\n  const tokenData: any = jwtDecode(token);\n  return tokenData['https://twindata.io/tenants'];\n};\nexport const createAuth0TenantUrl = (id: string) =>\n  `https://twindata.io/cdf/${id}`;\n","import axios from 'axios';\nimport { isProduction } from './utils';\n\nexport const getBaseURL = (cluster?: string) => {\n  const clusterName = cluster && cluster !== 'api' ? `${cluster}.` : '';\n\n  if (!isProduction()) {\n    return `https://apps-api.staging.${clusterName}cognite.ai`;\n  }\n\n  return `https://apps-api.${clusterName}cognite.ai`;\n};\n\nconst api = axios.create({});\n\nexport const validateTenant = async (tenant: string, cluster?: string) => {\n  const requestParams = {\n    params: {\n      app: 'cdf',\n      tenant,\n      redirectUrl: window.location.origin,\n    },\n  };\n  const response = await api.get<boolean>(\n    `${getBaseURL(cluster)}/tenant`,\n    requestParams\n  );\n  return response.data;\n};\n","import React, { SyntheticEvent, useState } from 'react';\nimport { Input, Button, Title } from '@cognite/cogs.js';\nimport styled from 'styled-components/macro';\nimport { validateTenant } from './api';\n\ntype ErrorFeedbackProps = {\n  projectMissing?: boolean;\n  invalidProject: boolean;\n};\n\nfunction ErrorFeedback({ projectMissing, invalidProject }: ErrorFeedbackProps) {\n  if (projectMissing) {\n    return <p>Input your project name</p>;\n  }\n  if (invalidProject) {\n    return (\n      <>\n        <p>Check the following</p>\n        <ol>\n          <li>Is the CDF project name spelled correctly?</li>\n          <li>Is there an Identity Provider set up for your CDF project?</li>\n          <li>\n            Is the project using a specific CDF cluster, such as “greenfield“?\n            If so, update the cluster. You can enter the cluster name if it is\n            not listed.\n          </li>\n          <li>\n            Is <strong>{window.location.hostname}</strong> in the allowed\n            application domains list?\n          </li>\n        </ol>\n      </>\n    );\n  }\n  return null;\n}\n\nconst InputHelp = styled.div`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 20px;\n  color: var(--cogs-greyscale-grey7);\n`;\n\nconst ContinueButtonContainer = styled.div`\n  margin-top: 24px;\n  padding-bottom: 10px;\n`;\n\nconst sanitize = (input: string): string =>\n  input.toLowerCase().replace(/[^a-z0-9-]+/g, '');\n\ntype Props = {\n  cluster: string;\n  onTenantSelected: (tenant: string, cluster?: string) => void;\n};\n\n/**\n * Taken from https://github.com/cognitedata/cdf-hub-tenant-selector\n */\nexport default function LegacyLoginFlow({ cluster, onTenantSelected }: Props) {\n  const [projectName, setProjectName] = useState<string>('');\n  const [validationStatus, setValidationStatus] = useState<string>('unknown');\n\n  const [showFeedback, setShowFeedback] = useState(false);\n\n  const checkTenantValidity = async (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    setShowFeedback(true);\n\n    if (projectName.length === 0) {\n      return;\n    }\n\n    setValidationStatus('checking');\n\n    try {\n      const isTenantValid = await validateTenant(projectName, cluster);\n      setValidationStatus(isTenantValid ? 'valid' : 'invalid');\n      if (isTenantValid) {\n        onTenantSelected(projectName, cluster);\n      }\n    } catch {\n      setValidationStatus('invalid');\n    }\n  };\n\n  return (\n    <>\n      <Title level=\"5\">Sign in using CDF project name</Title>\n      <InputHelp>\n        The last part of the url {window.location.hostname}/\n        <strong>project</strong>\n      </InputHelp>\n      <Input\n        placeholder=\"Project name\"\n        fullWidth\n        style={{ marginTop: 5 }}\n        value={projectName}\n        onChange={(e) => {\n          setProjectName(sanitize(e.target.value));\n          setShowFeedback(false);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            checkTenantValidity(e);\n          }\n        }}\n        error={\n          showFeedback && (projectName.length === 0 || !validateTenant)\n            ? ' '\n            : undefined\n        }\n      />\n      {showFeedback && (\n        <ErrorFeedback\n          projectMissing={projectName.length === 0}\n          invalidProject={validationStatus === 'invalid'}\n        />\n      )}\n      <ContinueButtonContainer>\n        <Button\n          type=\"primary\"\n          onClick={checkTenantValidity}\n          loading={validationStatus === 'checking'}\n        >\n          Continue\n        </Button>\n      </ContinueButtonContainer>\n    </>\n  );\n}\n","import { Title } from '@cognite/cogs.js';\nimport React from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport { Cluster } from './types';\n\ntype Props = {\n  cluster: string;\n  onClusterChange: (e: Cluster) => void;\n  clusters: {\n    label: string;\n    options: Cluster[];\n  }[];\n};\n\n/**\n * Taken from https://github.com/cognitedata/cdf-hub-tenant-selector\n */\nexport default function ClusterSelect({\n  cluster,\n  onClusterChange,\n  clusters,\n}: Props) {\n  const value = clusters\n    .reduce((accl: Cluster[], group) => [...accl, ...group.options], [])\n    .find((e) => e.value === cluster) || {\n    value: cluster,\n    label: cluster,\n  };\n\n  return (\n    <>\n      <Title level={5} style={{ marginBottom: 4 }}>\n        Cluster\n      </Title>\n      <CreatableSelect\n        // @ts-ignore\n        value={value}\n        onChange={(e) => {\n          // @ts-ignore\n          onClusterChange(e);\n        }}\n        formatCreateLabel={(e) => `Use: ${e}`}\n        options={clusters}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Icon, Title } from '@cognite/cogs.js';\nimport Select from 'react-select';\nimport { useQuery } from 'react-query';\nimport { CogniteClient } from '@cognite/sdk';\n\ntype Props = {\n  sdkv3: CogniteClient;\n  move: (project: string) => void;\n};\n\n/**\n * Taken from https://github.com/cognitedata/cdf-hub-tenant-selector\n */\nconst ProjectTitle = () => (\n  <Title level={5} style={{ marginBottom: 4, marginTop: 16 }}>\n    Project\n  </Title>\n);\n\nexport default function ProjectSelect({ sdkv3, move }: Props) {\n  const [selectedProject, setSelectedProject] = useState<string | undefined>(\n    undefined\n  );\n  const { data = [], isFetched } = useQuery<string[]>(\n    [sdkv3.getBaseUrl(), 'token/inspect'],\n    async () => {\n      const result = await sdkv3.get('/api/v1/token/inspect');\n      return result.data?.projects?.map(\n        (p: { projectUrlName: string }) => p.projectUrlName\n      );\n    }\n  );\n\n  useEffect(() => {\n    if (!selectedProject && data.length > 0) {\n      setSelectedProject(data[0]);\n    }\n  }, [data, selectedProject]);\n\n  if (isFetched && data.length === 0) {\n    return (\n      <>\n        <ProjectTitle />\n\n        <p>\n          <Icon\n            type=\"ErrorStroked\"\n            style={{ marginRight: 10, color: '#e32351' }}\n          />\n          You are successully logged in, but no projects were found. Make sure\n          you have access to a CDF project.\n        </p>\n      </>\n    );\n  }\n\n  if (isFetched && data.length > 0) {\n    const options = data.map((d) => ({ value: d, label: d }));\n    const selected = options.find((p) => p.value === selectedProject) || {\n      value: selectedProject,\n      label: selectedProject,\n    };\n\n    return (\n      <>\n        <ProjectTitle />\n        <Select\n          style={{ margin: '20px 0' }}\n          value={selected}\n          options={options}\n          onChange={(e) => setSelectedProject(e?.value)}\n        />\n        <Button\n          style={{ marginTop: '16px' }}\n          type=\"primary\"\n          disabled={!selectedProject}\n          onClick={() => {\n            if (selectedProject) {\n              move(selectedProject);\n            }\n          }}\n        >\n          Continue\n        </Button>\n      </>\n    );\n  }\n  return <></>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Title } from '@cognite/cogs.js';\nimport Select from 'react-select';\nimport { CogniteClient } from '@cognite/sdk';\nimport { extractTenants } from './utils';\n\ntype Props = {\n  sdkv3: CogniteClient;\n  onTenantChanged: (tenantId: string) => void;\n};\n\ntype Tenant = { id: string; name: string };\n\nconst TenantTitle = () => (\n  <Title level={5} style={{ marginBottom: 4, marginTop: 16 }}>\n    Tenants\n  </Title>\n);\n\nconst TENANT_LOCALSTORAGE_KEY = 'selected_tenant_id';\n\nconst saveTenantId = (id: string) =>\n  localStorage.setItem(TENANT_LOCALSTORAGE_KEY, id);\n\nexport default function TenantList({ sdkv3, onTenantChanged }: Props) {\n  const [selectedTenant, setSelectedTenant] = useState<string | null>(\n    localStorage.getItem(TENANT_LOCALSTORAGE_KEY)\n  );\n  const [tenants, setTenants] = useState<Tenant[]>([]);\n\n  const handleOnChange = (tenantId: string) => {\n    setSelectedTenant(tenantId);\n    saveTenantId(tenantId);\n    onTenantChanged(tenantId);\n  };\n\n  useEffect(() => {\n    sdkv3.getIdToken().then((token) => {\n      if (!token) return;\n\n      const tokensList = extractTenants(token);\n      setTenants(tokensList);\n      if (!selectedTenant && tokensList?.length > 0) {\n        setSelectedTenant(tokensList[0].id);\n      }\n      localStorage.removeItem(TENANT_LOCALSTORAGE_KEY);\n    });\n  }, [sdkv3, selectedTenant]);\n\n  if (tenants?.length > 0) {\n    const options = tenants.map((d) => ({\n      value: d.id,\n      label: d.name,\n    }));\n    const selected = options.find((p) => p.value === selectedTenant) || {\n      value: selectedTenant,\n      label: selectedTenant,\n    };\n    return (\n      <>\n        <TenantTitle />\n        <Select\n          style={{ margin: '20px 0' }}\n          value={selected}\n          options={options}\n          onChange={(e) => {\n            handleOnChange(e?.value || '');\n          }}\n        />\n      </>\n    );\n  }\n  return <></>;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { Icon } from '@cognite/cogs.js';\nimport { getFlow, saveFlow, saveTenantFlow } from '@cognite/auth-utils';\nimport styled from 'styled-components/macro';\n\nimport { useSdk, useResetSdk } from 'store/sdk';\nimport { CogniteClient } from '@cognite/sdk';\nimport {\n  getClientId,\n  usePostOAuthLogin,\n  generateLoginOptions,\n} from 'store/auth';\nimport _ from 'lodash';\nimport { AuthProviders, Cluster } from './types';\n\nimport LoginWithAzure from './LoginWithAzure';\nimport LegacyLoginInput from './LegacyLoginInput';\nimport ClusterSelect from './ClusterSelect';\nimport ProjectSelect from './ProjectSelect';\nimport TenantList from './TenantList';\nimport { createAuth0TenantUrl, extractTenants } from './utils';\n\ntype ClustersInfo = {\n  label: string;\n  options: Cluster[];\n};\n\ntype Props = {\n  getCluster: () => string;\n  updateCluster: (cluster: Cluster) => void;\n  clusters: ClustersInfo[];\n  move: (project: string, method?: string, tenant?: string) => void;\n};\n\nconst getClusterInfo = (cluster: string, clusters: Cluster[]) =>\n  clusters.find((x) => x.value === cluster);\n\nconst accumulateClustersOptions = (clustersInfo: ClustersInfo[]) =>\n  clustersInfo.reduce((acc: Cluster[], c) => [...acc, ...c.options], []);\n\n// oidc client in sdk adds some items in localstorage, contain sensitive info\nconst clearOidcItems = () => {\n  _.forIn(window.localStorage, (value: string, objKey: string) => {\n    if (_.startsWith(objKey, 'oidc')) {\n      window.localStorage.removeItem(objKey);\n    }\n  });\n};\n\nexport const TenantSelector = ({\n  getCluster,\n  updateCluster,\n  clusters,\n  move,\n}: Props) => {\n  const sdk = useSdk();\n  const resetSdk = useResetSdk();\n  const postOAuthLogin = usePostOAuthLogin();\n\n  const cluster = getCluster();\n  const clustersOptions = accumulateClustersOptions(clusters);\n  const selectedClusterInfo = getClusterInfo(cluster, clustersOptions);\n\n  const [clientId, setClientId] = useState(\n    getClientId(selectedClusterInfo?.clientId)\n  );\n  const [provider, setProvider] = useState<\n    AuthProviders.Azure | AuthProviders.Auth0\n  >(selectedClusterInfo?.type || AuthProviders.Azure);\n\n  const onClusterChange = (e: Cluster) => {\n    setClientId(getClientId(e?.clientId));\n\n    setProvider(e?.type ?? AuthProviders.Azure);\n    setCluster(e);\n  };\n\n  const setCluster = updateCluster;\n\n  const [gotToken, setGotToken] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const clustersWithLegacyAuth = clustersOptions.filter((c) => c.legacyAuth);\n  const clustersWithAAD = clustersOptions.filter((c) => !c.disableAad);\n\n  const clientInfo = {\n    id: clientId,\n    provider,\n    cluster: selectedClusterInfo?.cluster,\n    configurationUrl: selectedClusterInfo?.configurationUrl,\n  };\n\n  const GetTenantToken = () => {\n    const { options } = getFlow();\n    const newSdk = new CogniteClient({\n      appId: 'il-tempo-gigante',\n    });\n    resetSdk(newSdk);\n    newSdk\n      .loginWithOAuth(\n        generateLoginOptions(clientInfo, options, 'select_account')\n      )\n      .then(async () => newSdk.authenticate());\n  };\n\n  const saveAzureFlow = (directory: string) =>\n    saveFlow('AZURE_AD', {\n      directory,\n    });\n\n  const onTenantChanged = (id: string) => {\n    const { options } = getFlow();\n    if (options?.directory.includes(id)) return;\n    saveAzureFlow(createAuth0TenantUrl(id));\n    GetTenantToken();\n  };\n\n  const setDefaultTenant = (token: string | null) => {\n    if (!token) return;\n    saveAzureFlow(createAuth0TenantUrl(extractTenants(token)[0].id));\n  };\n\n  const AUTH0_TWO_STEP_KEY = 'is_two_steps_login_required';\n\n  useEffect(() => {\n    const { flow, options } = getFlow();\n    const needTwoStepLogin = localStorage.getItem(AUTH0_TWO_STEP_KEY);\n    if (flow === 'AZURE_AD') {\n      setIsInitializing(true);\n      const newSdk = new CogniteClient({\n        appId: 'il-tempo-gigante',\n      });\n      resetSdk(newSdk);\n\n      newSdk\n        .loginWithOAuth(generateLoginOptions(clientInfo, options, 'none'))\n        .then(async (t) => {\n          if (needTwoStepLogin) {\n            localStorage.removeItem(AUTH0_TWO_STEP_KEY);\n            setIsInitializing(true);\n            if (!options?.directory) {\n              setDefaultTenant(await newSdk.getIdToken());\n            }\n            await GetTenantToken();\n          }\n          setGotToken(t);\n          setHasError(false);\n          postOAuthLogin(sdk);\n        })\n        .catch(() => {\n          setHasError(true);\n        })\n        .finally(() => {\n          if (!needTwoStepLogin) setIsInitializing(false);\n        });\n    }\n  }, [cluster, clientId]);\n\n  return (\n    <Card>\n      <ContentWrapper>\n        <ClusterSelect\n          cluster={cluster}\n          clusters={clusters}\n          onClusterChange={(env) => {\n            onClusterChange(env);\n          }}\n        />\n        <>\n          {gotToken && !!sdk && (\n            <TenantList sdkv3={sdk} onTenantChanged={onTenantChanged} />\n          )}\n          {gotToken && !!sdk && <ProjectSelect sdkv3={sdk} move={move} />}\n\n          {!isInitializing &&\n          window?.sessionStorage?.getItem('login-clicked') === 'true' &&\n          (hasError || !gotToken) ? (\n            <>\n              <div style={{ margin: '10px 0' }}>\n                <Icon\n                  type=\"ErrorStroked\"\n                  style={{ color: 'var(--cogs-danger)', marginRight: 10 }}\n                />\n                An error occurred when logging into the environment above. Make\n                sure you are a user that belongs in an Azure tenant that has the\n                cluster installed.\n              </div>\n\n              {clustersWithLegacyAuth.find((c) => c.value === cluster) && (\n                <div style={{ margin: '10px 0' }}>\n                  <strong>\n                    It is still possible to specify the project name below.\n                  </strong>{' '}\n                  This error is not relevant for that sign in flow.\n                </div>\n              )}\n            </>\n          ) : null}\n          {clustersWithAAD.map((c) => c.value).includes(cluster) && (\n            <LoginWithAzure\n              login={(directory?: string) => {\n                const { options } = getFlow();\n                setIsInitializing(true);\n                setHasError(false);\n\n                window.localStorage.removeItem('@cognite/sdk:accountLocalId');\n                window.sessionStorage.setItem('login-clicked', 'true');\n\n                const newSdk = new CogniteClient({\n                  appId: 'il-tempo-gigante',\n                });\n                resetSdk(newSdk);\n                newSdk\n                  .loginWithOAuth(\n                    generateLoginOptions(clientInfo, options, 'select_account')\n                  )\n                  .then(() => {\n                    saveAzureFlow(directory || '');\n                    return newSdk.authenticate();\n                  })\n                  .then(async (t) => {\n                    setGotToken(t);\n                    postOAuthLogin(sdk);\n                    setHasError(false);\n                  })\n                  .catch(() => {\n                    setHasError(true);\n                  })\n                  .finally(() => {\n                    // auth0 get the token in two steps\n                    if (selectedClusterInfo?.type === AuthProviders.Auth0)\n                      localStorage.setItem(AUTH0_TWO_STEP_KEY, '1');\n                    else setIsInitializing(false);\n                  });\n              }}\n              logout={() => {\n                window.localStorage.removeItem('@cognite/sdk:accountLocalId');\n                window.localStorage.removeItem('cognite__auth__v4_flow');\n                window.sessionStorage.removeItem('login-clicked');\n                clearOidcItems();\n                setGotToken(false);\n              }}\n              isInitializing={isInitializing}\n              isAuthenticated={gotToken}\n              provider={provider}\n            />\n          )}\n        </>\n        {clustersWithLegacyAuth.map((c) => c.value).includes(cluster) && (\n          <LegacyContainer>\n            <LegacyLoginInput\n              cluster={selectedClusterInfo?.cluster || ''}\n              onTenantSelected={(tenant) => {\n                saveTenantFlow(\n                  { tenant, env: selectedClusterInfo?.cluster },\n                  'COGNITE_AUTH'\n                );\n                move(tenant, 'tenant');\n              }}\n            />\n          </LegacyContainer>\n        )}\n      </ContentWrapper>\n      <HelpLink\n        href=\"https://docs.cognite.com/cdf/access/troubleshooting/login.html\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Help <HelpLinkIcon type=\"ExternalLink\" />\n      </HelpLink>\n    </Card>\n  );\n};\n\nconst LegacyContainer = styled.div`\n  margin-top: 30px;\n  padding-top: 30px;\n  border-top: 1px solid var(--cogs-greyscale-grey3);\n`;\n\nconst Card = styled.div`\n  max-width: 100%;\n  background: #fff;\n  border-radius: 4px;\n  box-sizing: border-box;\n  box-shadow: 0px 16.8443px 50.5328px rgba(0, 0, 0, 0.1),\n    0px 13.4754px 20.2131px rgba(0, 0, 0, 0.07);\n`;\n\nconst ContentWrapper = styled.div`\n  padding: 16px 32px 0;\n\n  button {\n    width: 100%;\n    height: 40px;\n  }\n\n  .content {\n    margin-top: 40px;\n  }\n`;\n\nconst HelpLink = styled.a`\n  background-color: #fafafa;\n  color: var(--cogs-text-color);\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n`;\n\nconst HelpLinkIcon = styled(Icon)`\n  margin-left: 5px;\n`;\n","import React from 'react';\nimport { TenantSelector } from 'components/TenantSelector/TenantSelector';\nimport { useEnv, useUpdateEnv } from 'hooks/env';\nimport {\n  AuthProviders,\n  Cluster,\n  Clusters,\n} from 'components/TenantSelector/types';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { stringify } from 'query-string';\n\nconst clusters: Clusters = [\n  {\n    label: 'Multi customer environments',\n    options: [\n      { value: '0', cluster: '', label: 'Europe 1 (Google)', legacyAuth: true },\n      { value: '1', cluster: 'westeurope-1', label: 'Europe 2 (Microsoft)' },\n      {\n        value: '2',\n        cluster: 'asia-northeast1-1',\n        label: 'Asia 1',\n        legacyAuth: true,\n      },\n      { value: '3', cluster: 'az-eastus-1', label: 'US East 1' },\n    ],\n  },\n  {\n    label: 'Single customer environments',\n    options: [\n      { value: '5', cluster: 'bp-northeurope', label: 'BP North Europe' },\n      { value: '6', cluster: 'bp', label: 'BP', legacyAuth: true },\n      { value: '7', cluster: 'az-energinet-westeurope', label: 'Energinet' },\n      {\n        value: '4',\n        cluster: 'westeurope-1',\n        label: 'Aize (Test)',\n        type: AuthProviders.Auth0,\n        configurationUrl:\n          'https://test.login.aize.io/.well-known/openid-configuration',\n        clientId: 'KthrD6rOXkrcGhsy4D1txOHzrYstaa77',\n      },\n      {\n        value: '18',\n        cluster: 'westeurope-1',\n        label: 'Aize (QA)',\n        type: AuthProviders.Auth0,\n        configurationUrl:\n          'https://qa.login.aize.io/.well-known/openid-configuration',\n        clientId: 'Lw3aXjBwkGhYuIQuxxZrzbNt1mv1yYdO',\n      },\n      {\n        value: '19',\n        cluster: 'westeurope-1',\n        label: 'Aize (Production)',\n        type: AuthProviders.Auth0,\n        configurationUrl:\n          'https://login.aize.io/.well-known/openid-configuration',\n        clientId: 'eHHthdNul8lJef0QqibC6xSiQ3iS7rF9',\n      },\n      { value: '8', cluster: 'omv', label: 'OMV', legacyAuth: true },\n      { value: '9', cluster: 'pgs', label: 'PGS', legacyAuth: true },\n      { value: '10', cluster: 'power-no', label: 'Power NO', legacyAuth: true },\n      { value: '11', cluster: 'statnett', label: 'Statnett', legacyAuth: true },\n    ],\n  },\n  {\n    label: 'Staging environments',\n    options: [\n      { value: '12', cluster: 'azure-dev', label: 'azure-dev' },\n      { value: '13', cluster: 'bluefield', label: 'bluefield' },\n      {\n        value: '14',\n        cluster: 'cognitedata-development',\n        label: 'cognitedata-development',\n        legacyAuth: true,\n      },\n      {\n        value: '15',\n        cluster: 'greenfield',\n        label: 'greenfield',\n        legacyAuth: true,\n      },\n      { value: '16', cluster: 'openfield', label: 'openfield' },\n      { value: '17', cluster: 'sandfield', label: 'sandfield' },\n    ],\n  },\n];\n\nexport const OIDCLogin = () => {\n  const setEnvironment = useUpdateEnv();\n  const env = useEnv();\n  const selectedClusterValue = _.isString(env) ? env : (env as Cluster).value;\n  const cluster = _.isString(env) ? env : (env as Cluster).cluster;\n  const history = useHistory();\n\n  return (\n    <TenantSelector\n      getCluster={() => selectedClusterValue}\n      clusters={clusters}\n      updateCluster={(e) => setEnvironment(e)}\n      move={(project, method = 'oauth') => {\n        history.push(\n          `/${project}?${stringify({\n            ...(cluster && { cluster }),\n            method,\n          })}`\n        );\n      }}\n    />\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useStoreState } from 'hooks';\nimport { Form, notification, Input } from 'antd';\nimport { Button } from '@cognite/cogs.js';\nimport styled from 'styled-components/macro';\nimport { useLocation } from 'react-router-dom';\nimport { useLogin } from 'store/auth';\nimport { useStatefulHistory } from 'hooks/history';\nimport { stringify } from 'query-string';\nimport { useQuery } from 'hooks/useQuery';\nimport { OIDCLogin } from './OIDCLogin';\n\nexport const LoginPage = () => {\n  const storeApiKey = useStoreState((state) => state.auth.apiKey);\n  const storeTenant = useStoreState((state) => state.auth.tenant);\n\n  const login = useLogin();\n\n  const [apiKey, setApiKey] = useState('');\n  const [tenant, setTenant] = useState('');\n  const [isLoading, setLoading] = useState(false);\n\n  const { search } = useLocation();\n\n  const queryParams = useMemo(() => new URLSearchParams(search), [search]);\n\n  useEffect(() => {\n    setApiKey(storeApiKey || '');\n    setTenant(storeTenant || '');\n  }, [storeApiKey, storeTenant]);\n\n  useEffect(() => {\n    if (queryParams.get('id_token') && tenant) {\n      // if the search parameter (search/query parameter containing the token) exist and\n      // the tenant exist, then pass to sdk to login\n      onLogIn();\n    }\n  }, [queryParams, tenant]);\n\n  const history = useStatefulHistory();\n\n  const method = useQuery.Method() || 'oauth';\n\n  const isApiKeyActive = method === 'apikey';\n  const isOAuthActive = method === 'oauth' || method === 'tenant';\n\n  const isLoginAllowed = apiKey.trim().length !== 0;\n\n  const onLogIn = async () => {\n    if (!isLoginAllowed) {\n      notification.error({\n        message: 'You must provide a CDF project or a valid API key',\n        description: 'Are you sure you entered a valid api key to your tenant?',\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      let success = false;\n      let project: undefined | string = '';\n\n      ({ tenant: project, loggedIn: success } = await login({ apiKey }));\n      if (!success) {\n        throw new Error('Unable to login');\n      }\n      history.push({\n        pathname: `/${project}`,\n        search: stringify({ method }),\n      });\n    } catch (ex) {\n      notification.error({\n        message: 'Could not log you in',\n        description: 'Are you sure you entered a valid api key to your tenant?',\n      });\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ overflow: 'auto', scrollBehavior: 'smooth' }}>\n      <LoginPageContainer>\n        <LoginWrapper>\n          <div className=\"content\">\n            <LoginContent>\n              <div>\n                <Title style={{ color: 'white' }}>Welcome to DSHub lite!</Title>\n                <Description>\n                  DSHub lite is a Jupyter notebook run entirely in the browser.\n                  This allows you to quickly get access to data through Python\n                  notebooks, with packages like pandas, numpy and matplotlib\n                  available.\n                </Description>\n              </div>\n              <Form\n                style={{ marginLeft: '6.625rem' }}\n                onFinish={() => {\n                  onLogIn();\n                }}\n              >\n                {isApiKeyActive && (\n                  <>\n                    <FormItem>\n                      <Input.Password\n                        name=\"apikey\"\n                        data-id=\"api-key-input\"\n                        onChange={(event) => {\n                          setApiKey(event.target.value);\n                        }}\n                        value={apiKey}\n                        placeholder=\"Enter API key\"\n                      />\n                    </FormItem>\n                    <StyledButton\n                      loading={isLoading}\n                      block\n                      htmlType=\"submit\"\n                      disabled={!isLoginAllowed || isLoading}\n                      type=\"primary\"\n                    >\n                      Access CDF EPC\n                    </StyledButton>\n                  </>\n                )}\n                {isOAuthActive && <OIDCLogin />}\n              </Form>\n            </LoginContent>\n          </div>\n        </LoginWrapper>\n      </LoginPageContainer>\n    </div>\n  );\n};\n\nconst LoginPageContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  width: 100%;\n  background-image: url('/images/login-screen.png');\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 103% 103%;\n`;\n\nconst LoginWrapper = styled.div`\n  width: 100%;\n  color: #ffffff;\n  background: #1b21409a;\n  margin: auto;\n  padding: 50px 120px;\n\n  .content {\n    max-width: 1200px;\n    width: 100%;\n    margin: 0 auto;\n  }\n`;\n\nconst LoginContent = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  align-items: center;\n`;\n\nconst FormItem = styled(Form.Item)`\n  margin-bottom: 1rem;\n`;\n\nconst Title = styled.h1`\n  font-weight: 700;\n  font-size: 2.25rem;\n  margin-bottom: 1.25rem;\n`;\n\nconst Description = styled.p`\n  font-size: 1rem;\n  line-height: 1.5rem;\n`;\n\nconst StyledButton = styled(Button)`\n  &.cogs-btn-disabled {\n    color: #ffffff;\n    background: var(--cogs-primary);\n    opacity: 0.7;\n    cursor: not-allowed !important;\n    &:hover {\n      background: var(--cogs-primary);\n      color: #ffffff;\n    }\n  }\n`;\n","import React from 'react';\nimport { useStoreState } from 'hooks';\n\nexport const HomePage = () => {\n  const token = useStoreState((state) => state.auth.token);\n  const project = useStoreState((state) => state.auth.tenant);\n  const cluster = useStoreState((state) => state.auth.cluster);\n\n  if (token) {\n    const url = encodeURI(\n      `https://${window.location.host}/jupyter/lab/index.html?token=${token}&project=${project}&cluster=${cluster}`\n    );\n    return (\n      <iframe\n        style={{ width: '100%', height: '100%' }}\n        title=\"JupyterLite\"\n        src={url}\n      />\n    );\n  }\n  return <></>;\n};\n","import { useParams } from 'react-router-dom';\n\nexport const useUrl = {\n  ProjectId: () => {\n    const { projectId } = useParams<{ projectId: string }>();\n    return projectId;\n  },\n  DatasourceId: () => {\n    const { datasourceId } = useParams<{ datasourceId: string }>();\n    return datasourceId;\n  },\n  Tenant: () => {\n    const { tenantId } = useParams<{ tenantId: string }>();\n    return tenantId as string;\n  },\n  SchemaName: () => {\n    const { schemaName } = useParams<{ schemaName: string }>();\n    return schemaName;\n  },\n  DigitalTwinName: () => {\n    const { digitalTwinName } = useParams<{ digitalTwinName: string }>();\n    return digitalTwinName;\n  },\n  SchemaNameDT: () => {\n    const { schemaNameDT } = useParams<{ schemaNameDT: string }>();\n    return schemaNameDT;\n  },\n  IntegrationsSourceName: () => {\n    const { integrationsSourceName } = useParams<{\n      integrationsSourceName: string;\n    }>();\n    return integrationsSourceName;\n  },\n  IntegrationId: () => {\n    const { integrationId } = useParams<{\n      integrationId: string;\n    }>();\n    return integrationId;\n  },\n};\n","import { AuthModel, authModel } from './auth';\nimport { SdkModel, sdkModel } from './sdk';\n\nexport interface StoreModel {\n  auth: AuthModel;\n  sdk: SdkModel;\n}\nexport const storeModel: StoreModel = {\n  auth: authModel,\n  sdk: sdkModel,\n};\n","import { createStore } from 'easy-peasy';\nimport { storeModel } from './model';\n\nconst store = createStore(storeModel);\n\n// Added support for hot reloading\n// Wrapping dev only code like this normally gets stripped out by bundlers\n// such as Webpack when creating a production build.\nif (process.env.NODE_ENV === 'development') {\n  // @ts-ignore\n  if (module.hot) {\n    // @ts-ignore\n    module.hot.accept('./model', () => {\n      store.reconfigure(storeModel); // 👈 Here is the magic\n    });\n  }\n}\n\nexport default store;\n","import 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport '@cognite/cogs.js/dist/cogs.css';\nimport styled, {\n  createGlobalStyle,\n  ThemeProvider,\n} from 'styled-components/macro';\nimport { StoreProvider } from 'easy-peasy';\nimport { InfoMessage } from 'components';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useLocation,\n} from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport { LoginPage } from 'pages/LoginPage/LoginPage';\nimport { HomePage } from 'pages/HomePage/HomePage';\nimport { useStoreState } from 'hooks';\nimport { useUrl } from 'hooks/useUrls';\nimport { Button, Loader } from '@cognite/cogs.js';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport store from 'store';\n\nimport { useLogin } from 'store/auth';\nimport { useQuery } from 'hooks/useQuery';\nimport { useStatefulHistory } from './hooks/history';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n  background-color: #f5f5f5;\n`;\n\nconst StyledWrapper = styled.div`\n  overflow: auto;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst theme = {\n  colors: {\n    primary: '#6E85FC',\n    primary_background: '#EDF0FF',\n  },\n};\n\nconst queryClient = new QueryClient();\n\nexport default function MyApp() {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <QueryClientProvider client={queryClient}>\n          <StoreProvider store={store}>\n            <Router>\n              <StyledPage>\n                <Switch>\n                  <Route exact path=\"/\">\n                    <LoginPage />\n                  </Route>\n                  <Route path=\"/:tenantId\">\n                    <RedirectToUrlTenant>\n                      <StyledWrapper>\n                        <Switch>\n                          <Route exact path=\"/:tenantId\">\n                            {/* <Header /> */}\n                            <HomePage />\n                          </Route>\n                        </Switch>\n                      </StyledWrapper>\n                    </RedirectToUrlTenant>\n                  </Route>\n                </Switch>\n              </StyledPage>\n            </Router>\n          </StoreProvider>\n        </QueryClientProvider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nconst RedirectToUrlTenant = ({\n  children = null,\n}: {\n  children: React.ReactNode;\n}) => {\n  const isSignedIn = useStoreState((state) => state.auth.loggedIn);\n  const tenant = useStoreState((state) => state.auth.tenant);\n  const login = useLogin();\n  const urlTenant = useUrl.Tenant();\n\n  const method = useQuery.Method();\n\n  const search = new URLSearchParams(useLocation().search);\n\n  const history = useStatefulHistory();\n\n  useEffect(() => {\n    // when the url tenant and the stored tenant is not the same, try to login with oauth\n    if (tenant !== urlTenant) {\n      login({ tenant: urlTenant, useOIDC: method === 'oauth' });\n    }\n  }, [tenant, urlTenant, login]);\n\n  useEffect(() => {\n    // first time loading back into `tenant`\n    try {\n      if (isSignedIn === undefined) {\n        if (method === 'oauth' && tenant === urlTenant) {\n          login({ tenant, useOIDC: true });\n        } else if (method === 'tenant' && tenant === urlTenant) {\n          login({ tenant, token: search.get('access_token') || undefined });\n        }\n      }\n    } catch (e) {\n      history.push('/');\n    }\n  }, [isSignedIn, login, method]);\n\n  if (!method) {\n    return (\n      <>\n        <InfoMessage type=\"Error\" title=\"Unable to log in\">\n          <>\n            <p>Unable to determine your login method, please sign in again</p>\n            <Button\n              icon=\"ArrowRight\"\n              iconPlacement=\"right\"\n              type=\"primary\"\n              onClick={() => history.push('/')}\n            >\n              Sign in again\n            </Button>\n          </>\n        </InfoMessage>\n      </>\n    );\n  }\n\n  if (isSignedIn === undefined) {\n    return <Loader darkMode />;\n  }\n  return <>{children}</>;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mixpanel from 'utils/mixpanel-frontend';\nimport './index.css';\nimport App from 'App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals((metric) => {\n  mixpanel.track(metric.name, metric);\n});\n"],"sourceRoot":""}